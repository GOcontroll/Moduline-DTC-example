#!/usr/bin/env python3
# This file provides an example for error decoding according to SAE J1939 codes generated by the GOcontroll-Simulink blockset

import os

# SAE J1939 FMI codes
fmi_list = [
    "Value too high severe",
    "Value too low severe",
    "Erratic, intermittent or incorrect",
    "Voltage above normal",
    "Voltage below normal",
    "Current below normal",
    "Current above normal",
    "Not responding properly",
    "Abnormal frequency, pulse width, or period",
    "Abnormal update rate",
    "Abnormal rate of change",
    "Other failure mode",
    "Failure",
    "Out of calibration",
    "Special instruction",
    "Value too high warning",
    "Value too high moderate",
    "Value too low warning",
    "Value too low moderate",
    "Data error",
    "Data drifted high",
    "Data drifted low",  # 21
]

# Application specific SPNs, customize this if you want to use SAE J1939 based fault codes
spn_map = {
    "1001": "Tank 1 temperature",
    "1002": "Tank 2 temperature",
    "1003": "Tank 3 temperature",
    "1004": "Tank 4 temperature",
    "1005": "Tank 5 temperature",
    "1006": "Tank 6 temperature",
    "1007": "Tank 7 temperature",
    "1008": "Tank 8 temperature",
    "1009": "Tank 9 temperature",
    "1010": "Tank 10 temperature",
    "1101": "Tank 1 pressure",
    "1102": "Tank 2 pressure",
    "1103": "Tank 3 pressure",
    "1104": "Tank 4 pressure",
    "1105": "Tank 5 pressure",
    "1106": "Tank 6 pressure",
    "1107": "Tank 7 pressure",
    "1108": "Tank 8 pressure",
    "1109": "Tank 9 pressure",
    "1110": "Tank 10 pressure",
    "1201": "GHU 1 high pressure temperature",
    "1202": "GHU 2 high pressure temperature",
    "1203": "GHU 3 high pressure temperature",
    "1204": "GHU 4 high pressure temperature",
    "1301": "GHU 1 low pressure temperature",
    "1302": "GHU 2 low pressure temperature",
    "1303": "GHU 3 low pressure temperature",
    "1304": "GHU 4 low pressure temperature",
    "1401": "GHU 1 high pressure pressure",
    "1402": "GHU 2 high pressure pressure",
    "1403": "GHU 3 high pressure pressure",
    "1404": "GHU 4 high pressure pressure",
    "1501": "GHU 1 low pressure pressure",
    "1502": "GHU 2 low pressure pressure",
    "1503": "GHU 3 low pressure pressure",
    "1504": "GHU 4 low pressure pressure",
    "1601": "GHU 1 low pressure pressure extra",
    "1602": "GHU 2 low pressure pressure extra",
    "1603": "GHU 3 low pressure pressure extra",
    "1604": "GHU 4 low pressure pressure extra",
    "1701": "Filling line 1 temperature",
    "1801": "Transportation line 1 temperature",
    "1802": "Transportation line 2 temperature",
    "1901": "Filling line 1 pressure",
    "2001": "Transportation line 1 pressure",
    "2002": "Transportation line 2 pressure",
    "4001": "Analog hydrogen sensor 1",
    "4002": "Analog hydrogen sensor 2",
    "4003": "Analog hydrogen sensor 3",
    "4101": "CAN Hydrogen sensor 1",
    "4102": "CAN Hydrogen sensor 2",
    "4103": "CAN Hydrogen sensor 3",
    "4104": "CAN Hydrogen sensor 4",
    "4105": "CAN Hydrogen sensor 5",
    "4106": "CAN Hydrogen sensor 6",
    "6001": "On tank valve 1",
    "6002": "On tank valve 2",
    "6003": "On tank valve 3",
    "6004": "On tank valve 4",
    "6005": "On tank valve 5",
    "6006": "On tank valve 6",
    "6007": "On tank valve 7",
    "6008": "On tank valve 8",
    "6009": "On tank valve 9",
    "6010": "On tank valve 10",
    "6101": "GHU 1 valve",
    "6102": "GHU 2 valve",
    "6103": "GHU 3 valve",
    "6104": "GHU 4 valve",
    "6201": "GHU 1 aux valve 1",
    "6202": "GHU 1 aux valve 2",
    "6203": "GHU 1 aux valve 3",
    "6204": "GHU 1 aux valve 4",
    "6301": "GHU 2 aux valve 1",
    "6302": "GHU 2 aux valve 2",
    "6303": "GHU 2 aux valve 3",
    "6304": "GHU 2 aux valve 4",
    "6401": "GHU 3 aux valve 1",
    "6402": "GHU 3 aux valve 2",
    "6403": "GHU 3 aux valve 3",
    "6404": "GHU 3 aux valve 4",
    "6501": "GHU 4 aux valve 1",
    "6502": "GHU 4 aux valve 2",
    "6503": "GHU 4 aux valve 3",
    "6504": "GHU 4 aux valve 4",
    "8001": "CAN hydrogen request from vehicle",
    "8002": "CAN refueling acknowledge from truck",
}

# spn mask has a very weird layout
# 0xe0ffff
# 0b1110_00000_1111_1111_1111_1111
# the three bits on the left must be shifted to join the other bytes
spn_mask = 0xFFFF
spn_mask2 = 0x5
fmi_mask = 0x1F


def get_errors() -> "dict | list[dict]":
    output = []
    try:
        files = os.listdir("/usr/mem-diag")
        for file in files:
            errno = int(file)
            spn = errno & spn_mask + ((errno & (spn_mask2 << 21)) >> 5)
            fmi = (errno >> 16) & fmi_mask
            description = f"{spn_map[str(spn)]} - {fmi_list[fmi]}"
            output.append({"file": file, "fc": spn, "desc": description})
        return output
    except Exception as ex:
        return {"err": f"Could not get errors\n{ex}"}
    pass


# Function for an entry point in setup.py
def print_errors():
    print(get_errors())


# If this file gets executed seperately it will do a debug print
# of all the present fault codes
if __name__ == "__main__":
    print(get_errors())
